package com.example.demo.controller;

import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;
import java.text.SimpleDateFormat;
import java.util.Date;


@RestController
public class ExploitController {

    @GetMapping(value = "exploit/{inicio}/{fin}")
    public String inicio(@PathVariable String inicio, @PathVariable String fin){
        String []destinos = {"MEX", "CUN"};
        RestTemplate restTemplate = new RestTemplate();
        SimpleDateFormat dt = new SimpleDateFormat("dd-MM-yyyy");
        /**
         * @param   year    the year minus 1900.
         * @param   month   the month between 0-11.
         * @param   date    the day of the month between 1-31.
         */
        Date start = new Date(Integer.valueOf(inicio.split("-")[0]) - 1900,
                Integer.valueOf(inicio.split("-")[1]) - 1,
                Integer.valueOf(inicio.split("-")[2]));
        Date end = new Date(Integer.valueOf(fin.split("-")[0]) - 1900,
                Integer.valueOf(fin.split("-")[1]) - 1,
                Integer.valueOf(fin.split("-")[2]));
        while(!start.equals(end)){
            System.out.println(start + " " + end);

            try {
                OkHttpClient client = new OkHttpClient();
                MediaType mediaType = MediaType.parse("text/xml");
                okhttp3.RequestBody body = okhttp3.RequestBody.create(mediaType, "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><GetFlights xmlns=\"http://tempuri.org/\"><departing>MEX</departing><goingTo>OAX</goingTo><returnAirport></returnAirport><destinationFinal></destinationFinal><tripType>return</tripType><dateDeparting>25-Ene-2019</dateDeparting><dateReturn>31-Ene-2019</dateReturn><passengersADT>1</passengersADT><passengersCHD>0</passengersCHD><maxStops>3</maxStops><bookingClass>Y</bookingClass><airline></airline><flexibleDates></flexibleDates><passengerType></passengerType><studentFare></studentFare></GetFlights></soap:Body></soap:Envelope>");
                Request request = new Request.Builder()
                        .url("https://balanceador.mundojoven.com/FlightsEngine.asmx?wsdl=")
                        .post(body)
                        .addHeader("TripType", "return")
                        .addHeader("DateDeparting", dt.format(start))
                        .addHeader("DateReturn", dt.format(end))
                        .addHeader("PassengersADT", "1")
                        .addHeader("MaxStops", "3")
                        .addHeader("BookingClass", "Y")
                        .addHeader("Content-Type", "text/xml")
                        .build();

                Response response = client.newCall(request).execute();
                System.out.println(response.body().string());
            }catch (Exception ex){
                System.out.println(ex.getMessage());
            }





            /*MultiValueMap<String, String> parametersMap = new LinkedMultiValueMap<>();
            parametersMap.add("TripType", "return");
            parametersMap.add("DateDeparting", dt.format(start));
            parametersMap.add("DateReturn", dt.format(end));
            parametersMap.add("PassengersADT", "1");
            parametersMap.add("MaxStops", "3");
            parametersMap.add("BookingClass", "Y");

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.TEXT_XML);

            String request = "";

            HttpEntity<String> entity = new HttpEntity<String>(request, headers);

            String respuesta = restTemplate.postForObject("https://balanceador.mundojoven.com/FlightsEngine.asmx?wsdl", entity,  String.class, parametersMap);
            System.out.println(respuesta);
            */

            /*try {
                URL url = new URL("https://balanceador.mundojoven.com/FlightsEngine.asmx?wsdl");
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setDoOutput(true);
                conn.setRequestMethod("POST");
                conn.setRequestProperty("Content-Type", "text/xml");
                conn.addRequestProperty("TripType", "return");
                conn.addRequestProperty("DateDeparting", dt.format(start));
                conn.addRequestProperty("DateReturn", dt.format(end));
                conn.addRequestProperty("PassengersADT", "1");
                conn.addRequestProperty("MaxStops", "3");
                conn.addRequestProperty("BookingClass", "Y");

                String input = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                        "<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n" +
                        "   <soap:Body>\n" +
                        "      <GetFlights xmlns=\"http://tempuri.org/\">\n" +
                        "         <departing>" + destinos[0] + "</departing>\n" +
                        "         <goingTo>" + destinos[1] + "</goingTo>\n" +
                        "         <returnAirport />\n" +
                        "         <destinationFinal />\n" +
                        "         <tripType>return</tripType>\n" +
                        "         <dateDeparting>" + dt.format(start) + "</dateDeparting>\n" +
                        "         <dateReturn>" + dt.format(end) + "</dateReturn>\n" +
                        "         <passengersADT>1</passengersADT>\n" +
                        "         <passengersCHD>0</passengersCHD>\n" +
                        "         <maxStops>3</maxStops>\n" +
                        "         <bookingClass>Y</bookingClass>\n" +
                        "         <airline />\n" +
                        "         <flexibleDates />\n" +
                        "         <passengerType />\n" +
                        "         <studentFare />\n" +
                        "      </GetFlights>\n" +
                        "   </soap:Body>\n" +
                        "</soap:Envelope>";

                OutputStream os = conn.getOutputStream();
                os.write(input.getBytes());
                os.flush();
                if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
                    throw new RuntimeException("Failed : HTTP error code : " + conn.getResponseCode());
                }
                BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));
                String output;
                System.out.println("Output from Server .... \n");
                while ((output = br.readLine()) != null) {
                    System.out.println(output);
                }
                conn.disconnect();
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (Exception e) {
                e.printStackTrace();
            }*/
            start.setDate(start.getDate() + 1);
        }
        return "";
    }

    @GetMapping(value = "index")
    public String inicio(){
        return "exploit/2018-12-01/2018-12-31";
    }
}
